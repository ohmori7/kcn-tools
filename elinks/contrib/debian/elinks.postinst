#! /bin/sh
# postinst for elinks
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/doc/packaging-manual/
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

case "$1" in
    configure)
        update-alternatives --quiet --install /usr/bin/links links \
	    /usr/bin/elinks 20 --slave /usr/share/man/man1/links.1.gz \
	    links.1.gz /usr/share/man/man1/elinks.1.gz
	update-alternatives --quiet --install /usr/bin/www-browser www-browser \
	    /usr/bin/elinks 35 \
	    --slave /usr/share/man/man1/www-browser.1.gz www-browser.1.gz \
	    /usr/share/man/man1/elinks.1.gz

      # Purge the debconf database we no longer need.
      if [ -e /usr/share/debconf/confmodule ]; then
        . /usr/share/debconf/confmodule
        db_version 2.0
        db_purge
      fi

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
